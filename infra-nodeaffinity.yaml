apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  labels:
    app: zookeeper
spec:
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: agentpool
                operator: In
                values:
                - usernode1
      containers:
      - name: zookeeper
        image: zookeeper:3.6.2
        ports:
        - containerPort: 2181
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        resources:
          requests:
            memory: "400Mi"
            cpu: "300m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
    name: zookeeper
spec:
    ports:
    - port: 2181
      targetPort: 2181
      name: zookeeper
    selector:
        app: zookeeper
---     
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: agentpool
                operator: In
                values:
                - usernode1
      containers:
      - name: rabbitmq
        image: xxxcontainer.azurecr.io/rabbitmq:3.9.8
        ports:
        - containerPort: 15672
        - containerPort: 5672
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "900m"
      imagePullSecrets:
      - name: secret
---
apiVersion: v1
kind: Service
metadata:
    name: rabbitmq
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
    type: LoadBalancer
    loadBalancerIP: xx.xx.xxx.xxx
    ports:
      - name: rabbitmqui
        port: 15672
        targetPort: 15672
      - name: rabbitmq
        port: 5672
        targetPort: 5672
    selector:
        app: rabbitmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: activemq
  labels:
    app: activemq
spec:
  selector:
    matchLabels:
      app: activemq
  template:
    metadata:
      labels:
        app: activemq
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: agentpool
                operator: In
                values:
                - usernode1
      containers:
      - name: activemq
        image: rmohr/activemq:5.15.9-alpine
        ports:
        - containerPort: 61616
        - containerPort: 8161
        resources:
          requests:
            memory: "500Mi"
            cpu: "700m"
          limits:
            memory: "1Gi"
            cpu: "900m"
---
apiVersion: v1
kind: Service
metadata:
    name: activemq
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
    type: LoadBalancer
    loadBalancerIP: xx.xx.xxx.xxx
    ports:
      - name: mqtcp
        port: 61616
        targetPort: 61616
      - name: activemqui
        port: 8161
        targetPort: 8161
    selector:
        app: activemq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
      - name: check-zookeeper-ready
        image: zookeeper:3.6.2
        command: ['sh', '-c',
          'sleep 60']
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: agentpool
                operator: In
                values:
                - usernode1
      containers:
      - name: kafka
        image: wurstmeister/kafka:2.12-2.1.0
        ports:
        - containerPort: 9092
        resources:
          requests:
            memory: "1Gi"
            cpu: "700m"
          limits:
            memory: "1.5Gi"
            cpu: "900m"
        env:
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "kafka"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS
          value: "20000"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka:9092"
---
apiVersion: v1
kind: Service
metadata:
    name: kafka
spec:
    ports:
    - port: 9092
      targetPort: 9092
      name: kafka
    selector:
        app: kafka
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: agentpool
                operator: In
                values:
                - usernode1
      containers:
      - name: mongo
        image: mongo:4.2.8
        ports:
        - containerPort: 27017
        resources:
          requests:
            memory: "500Mi"
            cpu: "700m"
          limits:
            memory: "1Gi"
            cpu: "900m"
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "test"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "test"
        - name: MONGO_INITDB_DATABASE
          value: "testdb"
        volumeMounts:
        - name: "init-database"
          mountPath: "/docker-entrypoint-initdb.d/"
      volumes:
       - name: "init-database"
         configMap:
           name: create-db-configmap
---
apiVersion: v1
kind: Service
metadata:
    name: mongo
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
    type: LoadBalancer
    loadBalancerIP: xx.xx.xxx.xxx
    ports:
    - port: 27017
      targetPort: 27017
      name: mongo
    selector:
        app: mongo
